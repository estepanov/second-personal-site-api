service: personal-site-api
useDotenv: true

custom:
  customDomain:
    certificateName: '*.api.estep.nyc'
    domainName: hello.api.estep.nyc
    basePath: ${self:provider.stage}
    stage: ${self:provider.stage}
    createRoute53Record: false
    apiType: rest
    autoDomain: false
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  serverless-iam-roles-per-function:
    defaultInherit: true # Each function will inherit the service level roles too.
  globalTables:
    regions: # list of regions in which you want to set up global tables
      - us-east-1 
    createStack: true
  prune:
    automatic: true
    number: 3



plugins:
  - serverless-webpack
  - serverless-domain-manager
  # - serverless-iam-roles-per-function
  # - serverless-create-global-dynamodb-table
  - serverless-prune-plugin
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'us-east-1'}
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
    shouldStartNameWithService: true # in anticipation of serverless v3
  environment:
    DEBUG: '*'
    NODE_ENV: ${self:provider.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    GAMER_TAG: ${ssm:${opt:stage, 'dev'}.GAMER_TAG}
    STDLIB_SECRET_TOKEN: ${ssm:${opt:stage, 'dev'}.STDLIB_SECRET_TOKEN}
    SENDGRID_API_KEY: ${ssm:${opt:stage, 'dev'}.SENDGRID_API_KEY}
    CONTACT_EMAIL: ${ssm:${opt:stage, 'dev'}.CONTACT_EMAIL}
    HCAPTCHA_SECRET: ${ssm:${opt:stage, 'dev'}.HCAPTCHA_SECRET}
    HTTP_CORS_ORIGIN: ${ssm:${opt:stage, 'dev'}.HTTP_CORS_ORIGIN}
    UPSTASH_REDIS_REST_URL: ${ssm:${opt:stage, 'dev'}.UPSTASH_REDIS_REST_URL}
    UPSTASH_REDIS_REST_TOKEN: ${ssm:${opt:stage, 'dev'}.UPSTASH_REDIS_REST_TOKEN}
  tracing:
    lambda: true
  lambdaHashingVersion: 20201221 # in anticipation of serverless v3
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ses:SendEmail
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"

functions:
  # hello:
  #   handler: src/handler.hello
  #   events:
  #     - http:
  #         method: get
  #         path: hello
  #         cors:
  #           origin: ${ssm:${opt:stage, 'dev'}.HTTP_CORS_ORIGIN}
  #           headers:
  #             - Content-Type
  #             - Authorization
  #           allowCredentials: true
  sendMessage:
    handler: src/contact.sendMessage
    events:
      - http:
          method: post
          path: sendMessage
          cors:
            origin: ${ssm:${opt:stage, 'dev'}.HTTP_CORS_ORIGIN}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true
  haloStatsTrackerOverview:
    handler: src/haloTracker.overview
    events:
      - http:
          method: get
          path: halo/stats-tracker/overview
          cors:
            origin: ${ssm:${opt:stage, 'dev'}.HTTP_CORS_ORIGIN}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true
  haloStatsOverview:
    handler: src/halo.statsOverview
    events:
      - http:
          method: get
          path: halo/stats/overview
          cors:
            origin: ${ssm:${opt:stage, 'dev'}.HTTP_CORS_ORIGIN}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true
  haloStatsRecentMatches:
    handler: src/halo.recentMatches
    events:
      - http:
          method: get
          path: halo/stats/recent-matches
          cors:
            origin: ${ssm:${opt:stage, 'dev'}.HTTP_CORS_ORIGIN}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true
  haloStatsPvpOverview:
    handler: src/halo.pvpOverview
    events:
      - http:
          method: get
          path: halo/stats/pvp
          cors:
            origin: ${ssm:${opt:stage, 'dev'}.HTTP_CORS_ORIGIN}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true
  haloStatsComparePvpOverview:
    handler: src/halo.comparePvpOverview
    events:
      - http:
          method: get
          path: halo/stats/pvp/compare
          cors:
            origin: ${ssm:${opt:stage, 'dev'}.HTTP_CORS_ORIGIN}
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true